// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package cmd

import (
	"user-management/internal/application/usecases/group"
	"user-management/internal/application/usecases/user"
	"user-management/internal/config"
	"user-management/internal/infrastructure/database"
	"user-management/internal/infrastructure/logger"
	"user-management/internal/infrastructure/repositories"
	"user-management/internal/infrastructure/web"
	"user-management/internal/infrastructure/web/controllers"
)

// Injectors from wire.go:

func InitializeServer() (*web.Server, error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, err
	}
	logrusLogger := logger.NewLogger()
	mongoDB, err := database.NewMongoDB(configConfig, logrusLogger)
	if err != nil {
		return nil, err
	}
	iUserRepository, err := repositories.NewUserRepository(mongoDB)
	if err != nil {
		return nil, err
	}
	createUserUseCase := user.NewCreateUserUseCase(iUserRepository)
	getUserUseCase := user.NewGetUserUseCase(iUserRepository)
	updateUserUseCase := user.NewUpdateUserUseCase(iUserRepository)
	deleteUserUseCase := user.NewDeleteUserUseCase(iUserRepository)
	listUsersUseCase := user.NewListUsersUseCase(iUserRepository)
	userController := controllers.NewUserController(createUserUseCase, getUserUseCase, updateUserUseCase, deleteUserUseCase, listUsersUseCase)
	iGroupRepository, err := repositories.NewGroupRepository(mongoDB)
	if err != nil {
		return nil, err
	}
	createGroupUseCase := group.NewCreateGroupUseCase(iGroupRepository)
	getGroupUseCase := group.NewGetGroupUseCase(iGroupRepository)
	updateGroupUseCase := group.NewUpdateGroupUseCase(iGroupRepository)
	deleteGroupUseCase := group.NewDeleteGroupUseCase(iGroupRepository)
	listGroupsUseCase := group.NewListGroupsUseCase(iGroupRepository)
	addUserToGroupUseCase := group.NewAddUserToGroupUseCase(iGroupRepository, iUserRepository)
	removeUserFromGroupUseCase := group.NewRemoveUserFromGroupUseCase(iGroupRepository)
	groupController := controllers.NewGroupController(createGroupUseCase, getGroupUseCase, updateGroupUseCase, deleteGroupUseCase, listGroupsUseCase, addUserToGroupUseCase, removeUserFromGroupUseCase)
	server := web.NewServer(configConfig, userController, groupController, logrusLogger, mongoDB)
	return server, nil
}
