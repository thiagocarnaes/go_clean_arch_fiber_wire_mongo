version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - MONGO_URI=mongodb://mongodb:27017
      - MONGO_DB=user_management
      - PORT=:8080
      - DD_SOURCE=${DD_SOURCE:-go}
      - DD_SERVICE=${DD_SERVICE:-user-management}
      - DD_TAGS=${DD_TAGS:-env:docker,app:fiber}
    depends_on:
      - mongodb
      - datadog-agent
    networks:
      - app-network
    restart: unless-stopped

  mongodb:
    image: mongo:7.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=user_management
    networks:
      - app-network
    restart: unless-stopped

  # MongoDB Express for database management (optional)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      - mongodb
    networks:
      - app-network
    restart: unless-stopped

  # Datadog Agent for monitoring and logging
  datadog-agent:
    image: gcr.io/datadoghq/agent:7
    container_name: datadog-agent
    environment:
      # Required: Your Datadog API key
      - DD_API_KEY=${DD_API_KEY}
      # Optional: Set the Datadog site (default: datadoghq.com)
      - DD_SITE=${DD_SITE:-datadoghq.com}
      # Enable log collection
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      # Enable APM (Application Performance Monitoring)
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
      # Enable Docker monitoring
      - DD_DOCKER_LABELS_AS_TAGS=true
      - DD_DOCKER_ENV_AS_TAGS=true
      # Set hostname
      - DD_HOSTNAME=user-management-docker
      # Enable process monitoring
      - DD_PROCESS_AGENT_ENABLED=true
    volumes:
      # For Docker monitoring
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      # For log collection
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks:
      - app-network
    restart: unless-stopped

volumes:
  mongodb_data:
    driver: local

networks:
  app-network:
    driver: bridge
